{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/CartContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, ReactNode } from \"react\";\n\nexport interface FoodItem {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n}\n\nexport interface CartItem extends FoodItem {\n  quantity: number;\n}\n\ninterface CartContextType {\n  cartItems: CartItem[];\n  total: number;\n  addItem: (item: CartItem) => void;\n  removeItem: (id: string) => void;\n  updateItemQuantity: (id: string, quantity: number) => void;\n  clearCart: () => void;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const CartProvider = ({ children }: { children: ReactNode }) => {\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  const addItem = (item: CartItem) => {\n    setCartItems((prev) => {\n      const existing = prev.find((i) => i.id === item.id);\n      if (existing) {\n        return prev.map((i) =>\n          i.id === item.id ? { ...i, quantity: i.quantity + item.quantity } : i\n        );\n      }\n      return [...prev, item];\n    });\n  };\n\n  const removeItem = (id: string) => {\n    setCartItems((prev) => prev.filter((item) => item.id !== id));\n  };\n\n  const updateItemQuantity = (id: string, quantity: number) => {\n    if (quantity < 1) return;\n    setCartItems((prev) =>\n      prev.map((item) => (item.id === id ? { ...item, quantity } : item))\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  const total = cartItems.reduce(\n    (acc, item) => acc + item.price * item.quantity,\n    0\n  );\n\n  return (\n    <CartContext.Provider\n      value={{ cartItems, total, addItem, removeItem, updateItemQuantity, clearCart }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = (): CartContextType => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAyBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAEzD,MAAM,UAAU,CAAC;QACf,aAAa,CAAC;YACZ,MAAM,WAAW,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,KAAK,EAAE;YAClD,IAAI,UAAU;gBACZ,OAAO,KAAK,GAAG,CAAC,CAAC,IACf,EAAE,EAAE,KAAK,KAAK,EAAE,GAAG;wBAAE,GAAG,CAAC;wBAAE,UAAU,EAAE,QAAQ,GAAG,KAAK,QAAQ;oBAAC,IAAI;YAExE;YACA,OAAO;mBAAI;gBAAM;aAAK;QACxB;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,aAAa,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;IAC3D;IAEA,MAAM,qBAAqB,CAAC,IAAY;QACtC,IAAI,WAAW,GAAG;QAClB,aAAa,CAAC,OACZ,KAAK,GAAG,CAAC,CAAC,OAAU,KAAK,EAAE,KAAK,KAAK;oBAAE,GAAG,IAAI;oBAAE;gBAAS,IAAI;IAEjE;IAEA,MAAM,YAAY;QAChB,aAAa,EAAE;IACjB;IAEA,MAAM,QAAQ,UAAU,MAAM,CAC5B,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,GAAG,KAAK,QAAQ,EAC/C;IAGF,qBACE,6LAAC,YAAY,QAAQ;QACnB,OAAO;YAAE;YAAW;YAAO;YAAS;YAAY;YAAoB;QAAU;kBAE7E;;;;;;AAGP;GA1Ca;KAAA;AA4CN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}